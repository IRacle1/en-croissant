/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SettingsImport } from './routes/settings'
import { Route as FilesImport } from './routes/files'
import { Route as EnginesImport } from './routes/engines'
import { Route as AccountsImport } from './routes/accounts'
import { Route as IndexImport } from './routes/index'
import { Route as DatabasesIndexImport } from './routes/databases/index'
import { Route as BroadcastsIndexImport } from './routes/broadcasts/index'
import { Route as DatabasesDatabaseIdImport } from './routes/databases/$databaseId'
import { Route as BroadcastsBroadcastIdIndexImport } from './routes/broadcasts/$broadcastId/index'
import { Route as BroadcastsBroadcastIdRoundIdIndexImport } from './routes/broadcasts/$broadcastId/$roundId/index'

// Create/Update Routes

const SettingsRoute = SettingsImport.update({
  path: '/settings',
  getParentRoute: () => rootRoute,
} as any)

const FilesRoute = FilesImport.update({
  path: '/files',
  getParentRoute: () => rootRoute,
} as any)

const EnginesRoute = EnginesImport.update({
  path: '/engines',
  getParentRoute: () => rootRoute,
} as any)

const AccountsRoute = AccountsImport.update({
  path: '/accounts',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const DatabasesIndexRoute = DatabasesIndexImport.update({
  path: '/databases/',
  getParentRoute: () => rootRoute,
} as any)

const BroadcastsIndexRoute = BroadcastsIndexImport.update({
  path: '/broadcasts/',
  getParentRoute: () => rootRoute,
} as any)

const DatabasesDatabaseIdRoute = DatabasesDatabaseIdImport.update({
  path: '/databases/$databaseId',
  getParentRoute: () => rootRoute,
} as any)

const BroadcastsBroadcastIdIndexRoute = BroadcastsBroadcastIdIndexImport.update(
  {
    path: '/broadcasts/$broadcastId/',
    getParentRoute: () => rootRoute,
  } as any,
)

const BroadcastsBroadcastIdRoundIdIndexRoute =
  BroadcastsBroadcastIdRoundIdIndexImport.update({
    path: '/broadcasts/$broadcastId/$roundId/',
    getParentRoute: () => rootRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/accounts': {
      preLoaderRoute: typeof AccountsImport
      parentRoute: typeof rootRoute
    }
    '/engines': {
      preLoaderRoute: typeof EnginesImport
      parentRoute: typeof rootRoute
    }
    '/files': {
      preLoaderRoute: typeof FilesImport
      parentRoute: typeof rootRoute
    }
    '/settings': {
      preLoaderRoute: typeof SettingsImport
      parentRoute: typeof rootRoute
    }
    '/databases/$databaseId': {
      preLoaderRoute: typeof DatabasesDatabaseIdImport
      parentRoute: typeof rootRoute
    }
    '/broadcasts/': {
      preLoaderRoute: typeof BroadcastsIndexImport
      parentRoute: typeof rootRoute
    }
    '/databases/': {
      preLoaderRoute: typeof DatabasesIndexImport
      parentRoute: typeof rootRoute
    }
    '/broadcasts/$broadcastId/': {
      preLoaderRoute: typeof BroadcastsBroadcastIdIndexImport
      parentRoute: typeof rootRoute
    }
    '/broadcasts/$broadcastId/$roundId/': {
      preLoaderRoute: typeof BroadcastsBroadcastIdRoundIdIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  AccountsRoute,
  EnginesRoute,
  FilesRoute,
  SettingsRoute,
  DatabasesDatabaseIdRoute,
  BroadcastsIndexRoute,
  DatabasesIndexRoute,
  BroadcastsBroadcastIdIndexRoute,
  BroadcastsBroadcastIdRoundIdIndexRoute,
])

/* prettier-ignore-end */
